package de.teamlapen.vampirism.client.model;

import de.teamlapen.vampirism.util.Logger;
import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;

/**
 * 
 * @author Moritz
 *
 */
public class ModelBloodAltarTier2 extends ModelBase {
	private static final String TAG = "ModelBloodAltarTier2";
	// fields
	ModelRenderer PillarFL;
	ModelRenderer PillarFR;
	ModelRenderer PillarBL;
	ModelRenderer PillarBR;
	ModelRenderer Base;
	ModelRenderer[][] sphere;
	ModelRenderer[][] liquid;

	private int bloodLevel = 15;
	// Texture offsets for blood
	private final int bloodOffsetX = 24;
	private final int bloodOffsetY = 0;
	

	public ModelBloodAltarTier2() {
		textureWidth = 64;
		textureHeight = 128;

		sphere = new ModelRenderer[16][0];
		liquid = new ModelRenderer[16][0];

		PillarFL = new ModelRenderer(this, 0, 121);
		PillarFL.addBox(0F, 0F, 0F, 1, 4, 1);
		PillarFL.setRotationPoint(-8F, 18F, -8F);
		PillarFL.setTextureSize(64, 32);
		PillarFL.mirror = true;
		setRotation(PillarFL, 0F, 0F, 0F);
		PillarFR = new ModelRenderer(this, 0, 121);
		PillarFR.addBox(0F, 0F, 0F, 1, 4, 1);
		PillarFR.setRotationPoint(7F, 18F, -8F);
		PillarFR.setTextureSize(64, 32);
		PillarFR.mirror = true;
		setRotation(PillarFR, 0F, 0F, 0F);
		PillarBL = new ModelRenderer(this, 0, 121);
		PillarBL.addBox(0F, 0F, 0F, 1, 4, 1);
		PillarBL.setRotationPoint(-8F, 18F, 7F);
		PillarBL.setTextureSize(64, 32);
		PillarBL.mirror = true;
		setRotation(PillarBL, 0F, 0F, 0F);
		PillarBR = new ModelRenderer(this, 0, 121);
		PillarBR.addBox(0F, 0F, 0F, 1, 4, 1);
		PillarBR.setRotationPoint(7F, 18F, 7F);
		PillarBR.setTextureSize(64, 32);
		PillarBR.mirror = true;
		setRotation(PillarBR, 0F, 0F, 0F);
		Base = new ModelRenderer(this, 0, 110);
		Base.addBox(-8F, 23F, -8F, 16, 2, 16);
		Base.setRotationPoint(0F, -1F, 0F);
		Base.setTextureSize(64, 128);
		Base.mirror = true;
		setRotation(Base, 0F, 0F, 0F);
		addGlassRing(0, 0, 0);
		addGlassRing(1, 1, 0);
		addGlassRing(2, 2, 0);
		addGlassRing(3, 3, 0);
		addGlassRing(4, 4, 0);
		addGlassRing(5, 5, 0);
		addGlassRing(6, 6, 0);
		addGlassRing(7, 7, 0);
		addGlassRing(7, 8, 1);
		addGlassRing(6, 9, -3);
		addGlassRing(5, 10, -5);
		addGlassRing(4, 11, -7);
		addGlassRing(3, 12, -9);
		addGlassRing(2, 13, -11);
		addGlassRing(1, 14, -13);
		addGlassRing(0, 15, -15);
		addBloodRing(0, 0, 0);
		addBloodRing(1, 1, 0);
		addBloodRing(2, 2, 0);
		addBloodRing(3, 3, 0);
		addBloodRing(4, 4, 0);
		addBloodRing(5, 5, 0);
		addBloodRing(6, 6, 0);
		addBloodRing(7, 7, 0);
		addBloodRing(7, 8, -1);
		addBloodRing(6, 9, -3);
		addBloodRing(5, 10, -5);
		addBloodRing(4, 11, -7);
		addBloodRing(3, 12, -9);
		addBloodRing(2, 13, -11);
		addBloodRing(1, 14, -13);
		addBloodRing(0, 15, -15);
	}

	public void render(Entity entity, float f, float f1, float f2, float f3,
			float f4, float f5) {
		super.render(entity, f, f1, f2, f3, f4, f5);
		setRotationAngles(f, f1, f2, f3, f4, f5, entity);
		PillarFL.render(f5);
		PillarFR.render(f5);
		PillarBL.render(f5);
		PillarBR.render(f5);
		Base.render(f5);
		for (ModelRenderer[] i : sphere)
			if (i != null)
				for (ModelRenderer j : i)
					if (j != null)
						j.render(f5);
		if (bloodLevel > liquid.length)
			Logger.e(TAG,
					"Invalid blood level! Not rendering blood in blood altar!");
		else
			for (int i = 0; i <= bloodLevel; i++)
				if (liquid[i] != null)
					for (ModelRenderer r : liquid[i])
						if(r!=null)
							r.render(f5);
	}

	private void addGlassRing(int index, int arrayIndex, int offset) {
		Logger.i(TAG, "AddGlassRing called, index=" + index);
		switch (index) {
		case 0:
			sphere[arrayIndex] = new ModelRenderer[5];
			sphere[arrayIndex][0] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][0].addBox(-1F, 23F + offset, -3F, 2, 1, 6);
			sphere[arrayIndex][0].setRotationPoint(0F, 0F, 0F);
			sphere[arrayIndex][0].setTextureSize(64, 32);
			sphere[arrayIndex][0].mirror = true;
			setRotation(sphere[arrayIndex][0], 0F, 0F, 0F);
			sphere[arrayIndex][1] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][1].addBox(-2F, 23F + offset, -2F, 1, 1, 4);
			sphere[arrayIndex][1].setRotationPoint(0F, 0F, 0F);
			sphere[arrayIndex][1].setTextureSize(64, 32);
			sphere[arrayIndex][1].mirror = true;
			setRotation(sphere[arrayIndex][1], 0F, 0F, 0F);
			sphere[arrayIndex][2] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][2].addBox(-3F, 23F + offset, -1F, 1, 1, 2);
			sphere[arrayIndex][2].setRotationPoint(0F, 0F, 0F);
			sphere[arrayIndex][2].setTextureSize(64, 32);
			sphere[arrayIndex][2].mirror = true;
			setRotation(sphere[arrayIndex][2], 0F, 0F, 0F);
			sphere[arrayIndex][3] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][3].addBox(1F, 23F + offset, -2F, 1, 1, 4);
			sphere[arrayIndex][3].setRotationPoint(0F, 0F, 0F);
			sphere[arrayIndex][3].setTextureSize(64, 32);
			sphere[arrayIndex][3].mirror = true;
			setRotation(sphere[arrayIndex][3], 0F, 0F, 0F);
			sphere[arrayIndex][4] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][4].addBox(2F, 23F + offset, -1F, 1, 1, 2);
			sphere[arrayIndex][4].setRotationPoint(0F, 0F, 0F);
			sphere[arrayIndex][4].setTextureSize(64, 32);
			sphere[arrayIndex][4].mirror = true;
			setRotation(sphere[arrayIndex][4], 0F, 0F, 0F);
			break;
		case 1:
			sphere[arrayIndex] = new ModelRenderer[12];
			sphere[arrayIndex][0] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][0].addBox(-1F, 22F + offset, -5F, 2, 1, 2);
			sphere[arrayIndex][0].setRotationPoint(0F, 0F, 0F);
			sphere[arrayIndex][0].setTextureSize(64, 32);
			sphere[arrayIndex][0].mirror = true;
			setRotation(sphere[arrayIndex][0], 0F, 0F, 0F);
			sphere[arrayIndex][1] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][1].addBox(-3F, 22F + offset, -4F, 2, 1, 2);
			sphere[arrayIndex][1].setRotationPoint(0F, 0F, 0F);
			sphere[arrayIndex][1].setTextureSize(64, 32);
			sphere[arrayIndex][1].mirror = true;
			setRotation(sphere[arrayIndex][1], 0F, 0F, 0F);
			sphere[arrayIndex][2] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][2].addBox(-4F, 22F + offset, -3F, 2, 1, 2);
			sphere[arrayIndex][2].setRotationPoint(0F, 0F, 0F);
			sphere[arrayIndex][2].setTextureSize(64, 32);
			sphere[arrayIndex][2].mirror = true;
			setRotation(sphere[arrayIndex][2], 0F, 0F, 0F);
			sphere[arrayIndex][3] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][3].addBox(-5F, 22F + offset, -1F, 2, 1, 2);
			sphere[arrayIndex][3].setRotationPoint(0F, 0F, 0F);
			sphere[arrayIndex][3].setTextureSize(64, 32);
			sphere[arrayIndex][3].mirror = true;
			setRotation(sphere[arrayIndex][3], 0F, 0F, 0F);
			sphere[arrayIndex][4] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][4].addBox(-4F, 22F + offset, 1F, 2, 1, 2);
			sphere[arrayIndex][4].setRotationPoint(0F, 0F, 0F);
			sphere[arrayIndex][4].setTextureSize(64, 32);
			sphere[arrayIndex][4].mirror = true;
			setRotation(sphere[arrayIndex][4], 0F, 0F, 0F);
			sphere[arrayIndex][5] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][5].addBox(-3F, 22F + offset, 2F, 2, 1, 2);
			sphere[arrayIndex][5].setRotationPoint(0F, 0F, 0F);
			sphere[arrayIndex][5].setTextureSize(64, 32);
			sphere[arrayIndex][5].mirror = true;
			setRotation(sphere[arrayIndex][5], 0F, 0F, 0F);
			sphere[arrayIndex][6] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][6].addBox(-1F, 22F + offset, 3F, 2, 1, 2);
			sphere[arrayIndex][6].setRotationPoint(0F, 0F, 0F);
			sphere[arrayIndex][6].setTextureSize(64, 32);
			sphere[arrayIndex][6].mirror = true;
			setRotation(sphere[arrayIndex][6], 0F, 0F, 0F);
			sphere[arrayIndex][7] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][7].addBox(1F, 22F + offset, 2F, 2, 1, 2);
			sphere[arrayIndex][7].setRotationPoint(0F, 0F, 0F);
			sphere[arrayIndex][7].setTextureSize(64, 32);
			sphere[arrayIndex][7].mirror = true;
			setRotation(sphere[arrayIndex][7], 0F, 0F, 0F);
			sphere[arrayIndex][8] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][8].addBox(2F, 22F + offset, 1F, 2, 1, 2);
			sphere[arrayIndex][8].setRotationPoint(0F, 0F, 0F);
			sphere[arrayIndex][8].setTextureSize(64, 32);
			sphere[arrayIndex][8].mirror = true;
			setRotation(sphere[arrayIndex][8], 0F, 0F, 0F);
			sphere[arrayIndex][9] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][9].addBox(3F, 22F + offset, -1F, 2, 1, 2);
			sphere[arrayIndex][9].setRotationPoint(0F, 0F, 0F);
			sphere[arrayIndex][9].setTextureSize(64, 32);
			sphere[arrayIndex][9].mirror = true;
			setRotation(sphere[arrayIndex][9], 0F, 0F, 0F);
			sphere[arrayIndex][10] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][10].addBox(2F, 22F + offset, -3F, 2, 1, 2);
			sphere[arrayIndex][10].setRotationPoint(0F, 0F, 0F);
			sphere[arrayIndex][10].setTextureSize(64, 32);
			sphere[arrayIndex][10].mirror = true;
			setRotation(sphere[arrayIndex][10], 0F, 0F, 0F);
			sphere[arrayIndex][11] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][11].addBox(1F, 22F + offset, -4F, 2, 1, 2);
			sphere[arrayIndex][11].setRotationPoint(0F, 0F, 0F);
			sphere[arrayIndex][11].setTextureSize(64, 32);
			sphere[arrayIndex][11].mirror = true;
			setRotation(sphere[arrayIndex][11], 0F, 0F, 0F);
			break;
		case 2:
			sphere[arrayIndex] = new ModelRenderer[16];
			sphere[arrayIndex][0] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][0].addBox(-2F, 21F + offset, -6F, 4, 1, 1);
			sphere[arrayIndex][0].setRotationPoint(0F, 0F, 0F);
			sphere[arrayIndex][0].setTextureSize(64, 32);
			sphere[arrayIndex][0].mirror = true;
			setRotation(sphere[arrayIndex][0], 0F, 0F, 0F);
			sphere[arrayIndex][1] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][1].addBox(-4F, 21F + offset, -5F, 3, 1, 1);
			sphere[arrayIndex][1].setRotationPoint(0F, 0F, 0F);
			sphere[arrayIndex][1].setTextureSize(64, 32);
			sphere[arrayIndex][1].mirror = true;
			setRotation(sphere[arrayIndex][1], 0F, 0F, 0F);
			sphere[arrayIndex][2] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][2].addBox(-5F, 21F + offset, -4F, 2, 1, 1);
			sphere[arrayIndex][2].setRotationPoint(0F, 0F, 0F);
			sphere[arrayIndex][2].setTextureSize(64, 32);
			sphere[arrayIndex][2].mirror = true;
			setRotation(sphere[arrayIndex][2], 0F, 0F, 0F);
			sphere[arrayIndex][3] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][3].addBox(-5F, 21F + offset, -3F, 1, 1, 2);
			sphere[arrayIndex][3].setRotationPoint(0F, 0F, 0F);
			sphere[arrayIndex][3].setTextureSize(64, 32);
			sphere[arrayIndex][3].mirror = true;
			setRotation(sphere[arrayIndex][3], 0F, 0F, 0F);
			sphere[arrayIndex][4] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][4].addBox(-6F, 21F + offset, -2F, 1, 1, 4);
			sphere[arrayIndex][4].setRotationPoint(0F, 0F, 0F);
			sphere[arrayIndex][4].setTextureSize(64, 32);
			sphere[arrayIndex][4].mirror = true;
			setRotation(sphere[arrayIndex][4], 0F, 0F, 0F);
			sphere[arrayIndex][5] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][5].addBox(-5F, 21F + offset, 1F, 1, 1, 2);
			sphere[arrayIndex][5].setRotationPoint(0F, 0F, 0F);
			sphere[arrayIndex][5].setTextureSize(64, 32);
			sphere[arrayIndex][5].mirror = true;
			setRotation(sphere[arrayIndex][5], 0F, 0F, 0F);
			sphere[arrayIndex][6] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][6].addBox(-5F, 21F + offset, 3F, 2, 1, 1);
			sphere[arrayIndex][6].setRotationPoint(0F, 0F, 0F);
			sphere[arrayIndex][6].setTextureSize(64, 32);
			sphere[arrayIndex][6].mirror = true;
			setRotation(sphere[arrayIndex][6], 0F, 0F, 0F);
			sphere[arrayIndex][7] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][7].addBox(-4F, 21F + offset, 4F, 3, 1, 1);
			sphere[arrayIndex][7].setRotationPoint(0F, 0F, 0F);
			sphere[arrayIndex][7].setTextureSize(64, 32);
			sphere[arrayIndex][7].mirror = true;
			setRotation(sphere[arrayIndex][7], 0F, 0F, 0F);
			sphere[arrayIndex][8] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][8].addBox(-2F, 21F + offset, 5F, 4, 1, 1);
			sphere[arrayIndex][8].setRotationPoint(0F, 0F, 0F);
			sphere[arrayIndex][8].setTextureSize(64, 32);
			sphere[arrayIndex][8].mirror = true;
			setRotation(sphere[arrayIndex][8], 0F, 0F, 0F);
			sphere[arrayIndex][9] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][9].addBox(1F, 21F + offset, 4F, 3, 1, 1);
			sphere[arrayIndex][9].setRotationPoint(0F, 0F, 0F);
			sphere[arrayIndex][9].setTextureSize(64, 32);
			sphere[arrayIndex][9].mirror = true;
			setRotation(sphere[arrayIndex][9], 0F, 0F, 0F);
			sphere[arrayIndex][10] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][10].addBox(3F, 21F + offset, 3F, 2, 1, 1);
			sphere[arrayIndex][10].setRotationPoint(0F, 0F, 0F);
			sphere[arrayIndex][10].setTextureSize(64, 32);
			sphere[arrayIndex][10].mirror = true;
			setRotation(sphere[arrayIndex][10], 0F, 0F, 0F);
			sphere[arrayIndex][11] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][11].addBox(4F, 21F + offset, 1F, 1, 1, 2);
			sphere[arrayIndex][11].setRotationPoint(0F, 0F, 0F);
			sphere[arrayIndex][11].setTextureSize(64, 32);
			sphere[arrayIndex][11].mirror = true;
			setRotation(sphere[arrayIndex][11], 0F, 0F, 0F);
			sphere[arrayIndex][12] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][12].addBox(5F, 21F + offset, -2F, 1, 1, 4);
			sphere[arrayIndex][12].setRotationPoint(0F, 0F, 0F);
			sphere[arrayIndex][12].setTextureSize(64, 32);
			sphere[arrayIndex][12].mirror = true;
			setRotation(sphere[arrayIndex][12], 0F, 0F, 0F);
			sphere[arrayIndex][13] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][13].addBox(4F, 21F + offset, -3F, 1, 1, 2);
			sphere[arrayIndex][13].setRotationPoint(0F, 0F, 0F);
			sphere[arrayIndex][13].setTextureSize(64, 32);
			sphere[arrayIndex][13].mirror = true;
			setRotation(sphere[arrayIndex][13], 0F, 0F, 0F);
			sphere[arrayIndex][14] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][14].addBox(3F, 21F + offset, -4F, 2, 1, 1);
			sphere[arrayIndex][14].setRotationPoint(0F, 0F, 0F);
			sphere[arrayIndex][14].setTextureSize(64, 32);
			sphere[arrayIndex][14].mirror = true;
			setRotation(sphere[arrayIndex][14], 0F, 0F, 0F);
			sphere[arrayIndex][15] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][15].addBox(1F, 21F + offset, -5F, 3, 1, 1);
			sphere[arrayIndex][15].setRotationPoint(0F, 0F, 0F);
			sphere[arrayIndex][15].setTextureSize(64, 32);
			sphere[arrayIndex][15].mirror = true;
			setRotation(sphere[arrayIndex][15], 0F, 0F, 0F);
			break;
		case 3:
			sphere[arrayIndex] = new ModelRenderer[16];
			sphere[arrayIndex][0] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][0].addBox(-1F, 20F + offset, -7F, 2, 1, 1);
			sphere[arrayIndex][0].setRotationPoint(0F, 0F, 0F);
			sphere[arrayIndex][0].setTextureSize(64, 32);
			sphere[arrayIndex][0].mirror = true;
			setRotation(sphere[arrayIndex][0], 0F, 0F, 0F);
			sphere[arrayIndex][1] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][1].addBox(-4F, 20F + offset, -6F, 3, 1, 1);
			sphere[arrayIndex][1].setRotationPoint(0F, 0F, 0F);
			sphere[arrayIndex][1].setTextureSize(64, 32);
			sphere[arrayIndex][1].mirror = true;
			setRotation(sphere[arrayIndex][1], 0F, 0F, 0F);
			sphere[arrayIndex][2] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][2].addBox(-5F, 20F + offset, -5F, 1, 1, 1);
			sphere[arrayIndex][2].setRotationPoint(0F, 0F, 0F);
			sphere[arrayIndex][2].setTextureSize(64, 32);
			sphere[arrayIndex][2].mirror = true;
			setRotation(sphere[arrayIndex][2], 0F, 0F, 0F);
			sphere[arrayIndex][3] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][3].addBox(-6F, 20F + offset, -4F, 1, 1, 3);
			sphere[arrayIndex][3].setRotationPoint(0F, 0F, 0F);
			sphere[arrayIndex][3].setTextureSize(64, 32);
			sphere[arrayIndex][3].mirror = true;
			setRotation(sphere[arrayIndex][3], 0F, 0F, 0F);
			sphere[arrayIndex][4] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][4].addBox(-7F, 20F + offset, -1F, 1, 1, 2);
			sphere[arrayIndex][4].setRotationPoint(0F, 0F, 0F);
			sphere[arrayIndex][4].setTextureSize(64, 32);
			sphere[arrayIndex][4].mirror = true;
			setRotation(sphere[arrayIndex][4], 0F, 0F, 0F);
			sphere[arrayIndex][5] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][5].addBox(-6F, 20F + offset, 1F, 1, 1, 3);
			sphere[arrayIndex][5].setRotationPoint(0F, 0F, 0F);
			sphere[arrayIndex][5].setTextureSize(64, 32);
			sphere[arrayIndex][5].mirror = true;
			setRotation(sphere[arrayIndex][5], 0F, 0F, 0F);
			sphere[arrayIndex][6] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][6].addBox(-5F, 20F + offset, 4F, 1, 1, 1);
			sphere[arrayIndex][6].setRotationPoint(0F, 0F, 0F);
			sphere[arrayIndex][6].setTextureSize(64, 32);
			sphere[arrayIndex][6].mirror = true;
			setRotation(sphere[arrayIndex][6], 0F, 0F, 0F);
			sphere[arrayIndex][8] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][8].addBox(-1F, 20F + offset, 6F, 2, 1, 1);
			sphere[arrayIndex][8].setRotationPoint(0F, 0F, 0F);
			sphere[arrayIndex][8].setTextureSize(64, 32);
			sphere[arrayIndex][8].mirror = true;
			setRotation(sphere[arrayIndex][8], 0F, 0F, 0F);
			sphere[arrayIndex][7] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][7].addBox(-4F, 20F + offset, 5F, 3, 1, 1);
			sphere[arrayIndex][7].setRotationPoint(0F, 0F, 0F);
			sphere[arrayIndex][7].setTextureSize(64, 32);
			sphere[arrayIndex][7].mirror = true;
			setRotation(sphere[arrayIndex][7], 0F, 0F, 0F);
			sphere[arrayIndex][9] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][9].addBox(1F, 20F + offset, 5F, 3, 1, 1);
			sphere[arrayIndex][9].setRotationPoint(0F, 0F, 0F);
			sphere[arrayIndex][9].setTextureSize(64, 32);
			sphere[arrayIndex][9].mirror = true;
			setRotation(sphere[arrayIndex][9], 0F, 0F, 0F);
			sphere[arrayIndex][10] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][10].addBox(4F, 20F + offset, 4F, 1, 1, 1);
			sphere[arrayIndex][10].setRotationPoint(0F, 0F, 0F);
			sphere[arrayIndex][10].setTextureSize(64, 32);
			sphere[arrayIndex][10].mirror = true;
			setRotation(sphere[arrayIndex][10], 0F, 0F, 0F);
			sphere[arrayIndex][11] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][11].addBox(5F, 20F + offset, 1F, 1, 1, 3);
			sphere[arrayIndex][11].setRotationPoint(0F, 0F, 0F);
			sphere[arrayIndex][11].setTextureSize(64, 32);
			sphere[arrayIndex][11].mirror = true;
			setRotation(sphere[arrayIndex][11], 0F, 0F, 0F);
			sphere[arrayIndex][13] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][13].addBox(5F, 20F + offset, -4F, 1, 1, 3);
			sphere[arrayIndex][13].setRotationPoint(0F, 0F, 0F);
			sphere[arrayIndex][13].setTextureSize(64, 32);
			sphere[arrayIndex][13].mirror = true;
			setRotation(sphere[arrayIndex][13], 0F, 0F, 0F);
			sphere[arrayIndex][12] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][12].addBox(6F, 20F + offset, -1F, 1, 1, 2);
			sphere[arrayIndex][12].setRotationPoint(0F, 0F, 0F);
			sphere[arrayIndex][12].setTextureSize(64, 32);
			sphere[arrayIndex][12].mirror = true;
			setRotation(sphere[arrayIndex][12], 0F, 0F, 0F);
			sphere[arrayIndex][14] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][14].addBox(4F, 20F + offset, -5F, 1, 1, 1);
			sphere[arrayIndex][14].setRotationPoint(0F, 0F, 0F);
			sphere[arrayIndex][14].setTextureSize(64, 32);
			sphere[arrayIndex][14].mirror = true;
			setRotation(sphere[arrayIndex][14], 0F, 0F, 0F);
			sphere[arrayIndex][15] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][15].addBox(1F, 20F + offset, -6F, 3, 1, 1);
			sphere[arrayIndex][15].setRotationPoint(0F, 0F, 0F);
			sphere[arrayIndex][15].setTextureSize(64, 32);
			sphere[arrayIndex][15].mirror = true;
			setRotation(sphere[arrayIndex][15], 0F, 0F, 0F);
			break;
		case 4:
			sphere[arrayIndex] = new ModelRenderer[12];
			sphere[arrayIndex][0] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][0].addBox(-3F, 19F + offset, -7F, 6, 1, 1);
			sphere[arrayIndex][0].setRotationPoint(0F, 0F, 0F);
			sphere[arrayIndex][0].setTextureSize(64, 32);
			sphere[arrayIndex][0].mirror = true;
			setRotation(sphere[arrayIndex][0], 0F, 0F, 0F);
			sphere[arrayIndex][1] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][1].addBox(-5F, 19F + offset, -6F, 2, 1, 1);
			sphere[arrayIndex][1].setRotationPoint(0F, 0F, 0F);
			sphere[arrayIndex][1].setTextureSize(64, 32);
			sphere[arrayIndex][1].mirror = true;
			setRotation(sphere[arrayIndex][1], 0F, 0F, 0F);
			sphere[arrayIndex][2] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][2].addBox(-6F, 19F + offset, -5F, 1, 1, 2);
			sphere[arrayIndex][2].setRotationPoint(0F, 0F, 0F);
			sphere[arrayIndex][2].setTextureSize(64, 32);
			sphere[arrayIndex][2].mirror = true;
			setRotation(sphere[arrayIndex][2], 0F, 0F, 0F);
			sphere[arrayIndex][3] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][3].addBox(-7F, 19F + offset, -3F, 1, 1, 6);
			sphere[arrayIndex][3].setRotationPoint(0F, 0F, 0F);
			sphere[arrayIndex][3].setTextureSize(64, 32);
			sphere[arrayIndex][3].mirror = true;
			setRotation(sphere[arrayIndex][3], 0F, 0F, 0F);
			sphere[arrayIndex][4] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][4].addBox(-6F, 19F + offset, 3F, 1, 1, 2);
			sphere[arrayIndex][4].setRotationPoint(0F, 0F, 0F);
			sphere[arrayIndex][4].setTextureSize(64, 32);
			sphere[arrayIndex][4].mirror = true;
			setRotation(sphere[arrayIndex][4], 0F, 0F, 0F);
			sphere[arrayIndex][5] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][5].addBox(-5F, 19F + offset, 5F, 2, 1, 1);
			sphere[arrayIndex][5].setRotationPoint(0F, 0F, 0F);
			sphere[arrayIndex][5].setTextureSize(64, 32);
			sphere[arrayIndex][5].mirror = true;
			setRotation(sphere[arrayIndex][5], 0F, 0F, 0F);
			sphere[arrayIndex][7] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][7].addBox(3F, 19F + offset, 5F, 2, 1, 1);
			sphere[arrayIndex][7].setRotationPoint(0F, 0F, 0F);
			sphere[arrayIndex][7].setTextureSize(64, 32);
			sphere[arrayIndex][7].mirror = true;
			setRotation(sphere[arrayIndex][7], 0F, 0F, 0F);
			sphere[arrayIndex][8] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][8].addBox(5F, 19F + offset, 3F, 1, 1, 2);
			sphere[arrayIndex][8].setRotationPoint(0F, 0F, 0F);
			sphere[arrayIndex][8].setTextureSize(64, 32);
			sphere[arrayIndex][8].mirror = true;
			setRotation(sphere[arrayIndex][8], 0F, 0F, 0F);
			sphere[arrayIndex][9] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][9].addBox(6F, 19F + offset, -3F, 1, 1, 6);
			sphere[arrayIndex][9].setRotationPoint(0F, 0F, 0F);
			sphere[arrayIndex][9].setTextureSize(64, 32);
			sphere[arrayIndex][9].mirror = true;
			setRotation(sphere[arrayIndex][9], 0F, 0F, 0F);
			sphere[arrayIndex][10] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][10].addBox(5F, 19F + offset, -5F, 1, 1, 2);
			sphere[arrayIndex][10].setRotationPoint(0F, 0F, 0F);
			sphere[arrayIndex][10].setTextureSize(64, 32);
			sphere[arrayIndex][10].mirror = true;
			setRotation(sphere[arrayIndex][10], 0F, 0F, 0F);
			sphere[arrayIndex][6] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][6].addBox(-3F, 19F + offset, 6F, 6, 1, 1);
			sphere[arrayIndex][6].setRotationPoint(0F, 0F, 0F);
			sphere[arrayIndex][6].setTextureSize(64, 32);
			sphere[arrayIndex][6].mirror = true;
			setRotation(sphere[arrayIndex][6], 0F, 0F, 0F);
			sphere[arrayIndex][11] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][11].addBox(3F, 19F + offset, -6F, 2, 1, 1);
			sphere[arrayIndex][11].setRotationPoint(0F, 0F, 0F);
			sphere[arrayIndex][11].setTextureSize(64, 32);
			sphere[arrayIndex][11].mirror = true;
			setRotation(sphere[arrayIndex][11], 0F, 0F, 0F);
			break;
		case 5:
			sphere[arrayIndex] = new ModelRenderer[20];
			sphere[arrayIndex][0] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][0].addBox(-1F, 18F + offset, -8F, 2, 1, 1);
			sphere[arrayIndex][0].setRotationPoint(0F, 0F, 0F);
			sphere[arrayIndex][0].setTextureSize(64, 32);
			sphere[arrayIndex][0].mirror = true;
			setRotation(sphere[arrayIndex][0], 0F, 0F, 0F);
			sphere[arrayIndex][1] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][1].addBox(-4F, 18F + offset, -7F, 3, 1, 1);
			sphere[arrayIndex][1].setRotationPoint(0F, 0F, 0F);
			sphere[arrayIndex][1].setTextureSize(64, 32);
			sphere[arrayIndex][1].mirror = true;
			setRotation(sphere[arrayIndex][1], 0F, 0F, 0F);
			sphere[arrayIndex][2] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][2].addBox(-5F, 18F + offset, -6F, 1, 1, 1);
			sphere[arrayIndex][2].setRotationPoint(0F, 0F, 0F);
			sphere[arrayIndex][2].setTextureSize(64, 32);
			sphere[arrayIndex][2].mirror = true;
			setRotation(sphere[arrayIndex][2], 0F, 0F, 0F);
			sphere[arrayIndex][3] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][3].addBox(-6F, 18F + offset, -5F, 1, 1, 1);
			sphere[arrayIndex][3].setRotationPoint(0F, 0F, 0F);
			sphere[arrayIndex][3].setTextureSize(64, 32);
			sphere[arrayIndex][3].mirror = true;
			setRotation(sphere[arrayIndex][3], 0F, 0F, 0F);
			sphere[arrayIndex][4] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][4].addBox(-7F, 18F + offset, -4F, 1, 1, 3);
			sphere[arrayIndex][4].setRotationPoint(0F, 0F, 0F);
			sphere[arrayIndex][4].setTextureSize(64, 32);
			sphere[arrayIndex][4].mirror = true;
			setRotation(sphere[arrayIndex][4], 0F, 0F, 0F);
			sphere[arrayIndex][5] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][5].addBox(-8F, 18F + offset, -1F, 1, 1, 2);
			sphere[arrayIndex][5].setRotationPoint(0F, 0F, 0F);
			sphere[arrayIndex][5].setTextureSize(64, 32);
			sphere[arrayIndex][5].mirror = true;
			setRotation(sphere[arrayIndex][5], 0F, 0F, 0F);
			sphere[arrayIndex][6] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][6].addBox(-7F, 18F + offset, 1F, 1, 1, 3);
			sphere[arrayIndex][6].setRotationPoint(0F, 0F, 0F);
			sphere[arrayIndex][6].setTextureSize(64, 32);
			sphere[arrayIndex][6].mirror = true;
			setRotation(sphere[arrayIndex][6], 0F, 0F, 0F);
			sphere[arrayIndex][7] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][7].addBox(-6F, 18F + offset, 4F, 1, 1, 1);
			sphere[arrayIndex][7].setRotationPoint(0F, 0F, 0F);
			sphere[arrayIndex][7].setTextureSize(64, 32);
			sphere[arrayIndex][7].mirror = true;
			setRotation(sphere[arrayIndex][7], 0F, 0F, 0F);
			sphere[arrayIndex][8] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][8].addBox(-5F, 18F + offset, 5F, 1, 1, 1);
			sphere[arrayIndex][8].setRotationPoint(0F, 0F, 0F);
			sphere[arrayIndex][8].setTextureSize(64, 32);
			sphere[arrayIndex][8].mirror = true;
			setRotation(sphere[arrayIndex][8], 0F, 0F, 0F);
			sphere[arrayIndex][10] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][10].addBox(-1F, 18F + offset, 7F, 2, 1, 1);
			sphere[arrayIndex][10].setRotationPoint(0F, 0F, 0F);
			sphere[arrayIndex][10].setTextureSize(64, 32);
			sphere[arrayIndex][10].mirror = true;
			setRotation(sphere[arrayIndex][10], 0F, 0F, 0F);
			sphere[arrayIndex][9] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][9].addBox(-4F, 18F + offset, 6F, 3, 1, 1);
			sphere[arrayIndex][9].setRotationPoint(0F, 0F, 0F);
			sphere[arrayIndex][9].setTextureSize(64, 32);
			sphere[arrayIndex][9].mirror = true;
			setRotation(sphere[arrayIndex][9], 0F, 0F, 0F);
			sphere[arrayIndex][12] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][12].addBox(4F, 18F + offset, 5F, 1, 1, 1);
			sphere[arrayIndex][12].setRotationPoint(0F, 0F, 0F);
			sphere[arrayIndex][12].setTextureSize(64, 32);
			sphere[arrayIndex][12].mirror = true;
			setRotation(sphere[arrayIndex][12], 0F, 0F, 0F);
			sphere[arrayIndex][11] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][11].addBox(1F, 18F + offset, 6F, 3, 1, 1);
			sphere[arrayIndex][11].setRotationPoint(0F, 0F, 0F);
			sphere[arrayIndex][11].setTextureSize(64, 32);
			sphere[arrayIndex][11].mirror = true;
			setRotation(sphere[arrayIndex][11], 0F, 0F, 0F);
			sphere[arrayIndex][13] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][13].addBox(5F, 18F + offset, 4F, 1, 1, 1);
			sphere[arrayIndex][13].setRotationPoint(0F, 0F, 0F);
			sphere[arrayIndex][13].setTextureSize(64, 32);
			sphere[arrayIndex][13].mirror = true;
			setRotation(sphere[arrayIndex][13], 0F, 0F, 0F);
			sphere[arrayIndex][14] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][14].addBox(6F, 18F + offset, 1F, 1, 1, 3);
			sphere[arrayIndex][14].setRotationPoint(0F, 0F, 0F);
			sphere[arrayIndex][14].setTextureSize(64, 32);
			sphere[arrayIndex][14].mirror = true;
			setRotation(sphere[arrayIndex][14], 0F, 0F, 0F);
			sphere[arrayIndex][15] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][15].addBox(7F, 18F + offset, -1F, 1, 1, 2);
			sphere[arrayIndex][15].setRotationPoint(0F, 0F, 0F);
			sphere[arrayIndex][15].setTextureSize(64, 32);
			sphere[arrayIndex][15].mirror = true;
			setRotation(sphere[arrayIndex][15], 0F, 0F, 0F);
			sphere[arrayIndex][17] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][17].addBox(5F, 18F + offset, -5F, 1, 1, 1);
			sphere[arrayIndex][17].setRotationPoint(0F, 0F, 0F);
			sphere[arrayIndex][17].setTextureSize(64, 32);
			sphere[arrayIndex][17].mirror = true;
			setRotation(sphere[arrayIndex][17], 0F, 0F, 0F);
			sphere[arrayIndex][18] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][18].addBox(4F, 18F + offset, -6F, 1, 1, 1);
			sphere[arrayIndex][18].setRotationPoint(0F, 0F, 0F);
			sphere[arrayIndex][18].setTextureSize(64, 32);
			sphere[arrayIndex][18].mirror = true;
			setRotation(sphere[arrayIndex][18], 0F, 0F, 0F);
			sphere[arrayIndex][16] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][16].addBox(6F, 18F + offset, -4F, 1, 1, 3);
			sphere[arrayIndex][16].setRotationPoint(0F, 0F, 0F);
			sphere[arrayIndex][16].setTextureSize(64, 32);
			sphere[arrayIndex][16].mirror = true;
			setRotation(sphere[arrayIndex][16], 0F, 0F, 0F);
			sphere[arrayIndex][19] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][19].addBox(1F, 18F + offset, -7F, 3, 1, 1);
			sphere[arrayIndex][19].setRotationPoint(0F, 0F, 0F);
			sphere[arrayIndex][19].setTextureSize(64, 32);
			sphere[arrayIndex][19].mirror = true;
			setRotation(sphere[arrayIndex][19], 0F, 0F, 0F);
			break;
		case 6:
			sphere[arrayIndex] = new ModelRenderer[20];
			sphere[arrayIndex][0] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][0].addBox(-2F, 17F + offset, -8F, 4, 1, 1);
			sphere[arrayIndex][0].setRotationPoint(0F, 0F, 0F);
			sphere[arrayIndex][0].setTextureSize(64, 32);
			sphere[arrayIndex][0].mirror = true;
			setRotation(sphere[arrayIndex][0], 0F, 0F, 0F);
			sphere[arrayIndex][1] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][1].addBox(-4F, 17F + offset, -7F, 2, 1, 1);
			sphere[arrayIndex][1].setRotationPoint(0F, 0F, 0F);
			sphere[arrayIndex][1].setTextureSize(64, 32);
			sphere[arrayIndex][1].mirror = true;
			setRotation(sphere[arrayIndex][1], 0F, 0F, 0F);
			sphere[arrayIndex][2] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][2].addBox(-6F, 17F + offset, -6F, 2, 1, 1);
			sphere[arrayIndex][2].setRotationPoint(0F, 0F, 0F);
			sphere[arrayIndex][2].setTextureSize(64, 32);
			sphere[arrayIndex][2].mirror = true;
			setRotation(sphere[arrayIndex][2], 0F, 0F, 0F);
			sphere[arrayIndex][3] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][3].addBox(-6F, 17F + offset, -5F, 1, 1, 1);
			sphere[arrayIndex][3].setRotationPoint(0F, 0F, 0F);
			sphere[arrayIndex][3].setTextureSize(64, 32);
			sphere[arrayIndex][3].mirror = true;
			setRotation(sphere[arrayIndex][3], 0F, 0F, 0F);
			sphere[arrayIndex][4] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][4].addBox(-6F, 17F + offset, -5F, 1, 1, 2);
			sphere[arrayIndex][4].setRotationPoint(-1F, 0F, 1F);
			sphere[arrayIndex][4].setTextureSize(64, 32);
			sphere[arrayIndex][4].mirror = true;
			setRotation(sphere[arrayIndex][4], 0F, 0F, 0F);
			sphere[arrayIndex][5] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][5].addBox(-7F, 17F + offset, -3F, 1, 1, 4);
			sphere[arrayIndex][5].setRotationPoint(-1F, 0F, 1F);
			sphere[arrayIndex][5].setTextureSize(64, 32);
			sphere[arrayIndex][5].mirror = true;
			setRotation(sphere[arrayIndex][5], 0F, 0F, 0F);
			sphere[arrayIndex][6] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][6].addBox(-6F, 17F + offset, 1F, 1, 1, 2);
			sphere[arrayIndex][6].setRotationPoint(-1F, 0F, 1F);
			sphere[arrayIndex][6].setTextureSize(64, 32);
			sphere[arrayIndex][6].mirror = true;
			setRotation(sphere[arrayIndex][6], 0F, 0F, 0F);
			sphere[arrayIndex][7] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][7].addBox(-6F, 17F + offset, 4F, 1, 1, 1);
			sphere[arrayIndex][7].setRotationPoint(0F, 0F, 0F);
			sphere[arrayIndex][7].setTextureSize(64, 32);
			sphere[arrayIndex][7].mirror = true;
			setRotation(sphere[arrayIndex][7], 0F, 0F, 0F);
			sphere[arrayIndex][8] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][8].addBox(-6F, 17F + offset, 5F, 2, 1, 1);
			sphere[arrayIndex][8].setRotationPoint(0F, 0F, 0F);
			sphere[arrayIndex][8].setTextureSize(64, 32);
			sphere[arrayIndex][8].mirror = true;
			setRotation(sphere[arrayIndex][8], 0F, 0F, 0F);
			sphere[arrayIndex][9] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][9].addBox(-4F, 17F + offset, 6F, 2, 1, 1);
			sphere[arrayIndex][9].setRotationPoint(0F, 0F, 0F);
			sphere[arrayIndex][9].setTextureSize(64, 32);
			sphere[arrayIndex][9].mirror = true;
			setRotation(sphere[arrayIndex][9], 0F, 0F, 0F);
			sphere[arrayIndex][10] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][10].addBox(-2F, 17F + offset, 7F, 4, 1, 1);
			sphere[arrayIndex][10].setRotationPoint(0F, 0F, 0F);
			sphere[arrayIndex][10].setTextureSize(64, 32);
			sphere[arrayIndex][10].mirror = true;
			setRotation(sphere[arrayIndex][10], 0F, 0F, 0F);
			sphere[arrayIndex][11] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][11].addBox(2F, 17F + offset, 6F, 2, 1, 1);
			sphere[arrayIndex][11].setRotationPoint(0F, 0F, 0F);
			sphere[arrayIndex][11].setTextureSize(64, 32);
			sphere[arrayIndex][11].mirror = true;
			setRotation(sphere[arrayIndex][11], 0F, 0F, 0F);
			sphere[arrayIndex][12] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][12].addBox(4F, 17F + offset, 5F, 2, 1, 1);
			sphere[arrayIndex][12].setRotationPoint(0F, 0F, 0F);
			sphere[arrayIndex][12].setTextureSize(64, 32);
			sphere[arrayIndex][12].mirror = true;
			setRotation(sphere[arrayIndex][12], 0F, 0F, 0F);
			sphere[arrayIndex][13] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][13].addBox(5F, 17F + offset, 4F, 1, 1, 1);
			sphere[arrayIndex][13].setRotationPoint(0F, 0F, 0F);
			sphere[arrayIndex][13].setTextureSize(64, 32);
			sphere[arrayIndex][13].mirror = true;
			setRotation(sphere[arrayIndex][13], 0F, 0F, 0F);
			sphere[arrayIndex][14] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][14].addBox(7F, 17F + offset, 1F, 1, 1, 2);
			sphere[arrayIndex][14].setRotationPoint(-1F, 0F, 1F);
			sphere[arrayIndex][14].setTextureSize(64, 32);
			sphere[arrayIndex][14].mirror = true;
			setRotation(sphere[arrayIndex][14], 0F, 0F, 0F);
			sphere[arrayIndex][15] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][15].addBox(8F, 17F + offset, -3F, 1, 1, 4);
			sphere[arrayIndex][15].setRotationPoint(-1F, 0F, 1F);
			sphere[arrayIndex][15].setTextureSize(64, 32);
			sphere[arrayIndex][15].mirror = true;
			setRotation(sphere[arrayIndex][15], 0F, 0F, 0F);
			sphere[arrayIndex][16] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][16].addBox(7F, 17F + offset, -5F, 1, 1, 2);
			sphere[arrayIndex][16].setRotationPoint(-1F, 0F, 1F);
			sphere[arrayIndex][16].setTextureSize(64, 32);
			sphere[arrayIndex][16].mirror = true;
			setRotation(sphere[arrayIndex][16], 0F, 0F, 0F);
			sphere[arrayIndex][17] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][17].addBox(5F, 17F + offset, -5F, 1, 1, 1);
			sphere[arrayIndex][17].setRotationPoint(0F, 0F, 0F);
			sphere[arrayIndex][17].setTextureSize(64, 32);
			sphere[arrayIndex][17].mirror = true;
			setRotation(sphere[arrayIndex][17], 0F, 0F, 0F);
			sphere[arrayIndex][18] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][18].addBox(4F, 17F + offset, -6F, 2, 1, 1);
			sphere[arrayIndex][18].setRotationPoint(0F, 0F, 0F);
			sphere[arrayIndex][18].setTextureSize(64, 32);
			sphere[arrayIndex][18].mirror = true;
			setRotation(sphere[arrayIndex][18], 0F, 0F, 0F);
			sphere[arrayIndex][19] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][19].addBox(2F, 17F + offset, -7F, 2, 1, 1);
			sphere[arrayIndex][19].setRotationPoint(0F, 0F, 0F);
			sphere[arrayIndex][19].setTextureSize(64, 32);
			sphere[arrayIndex][19].mirror = true;
			setRotation(sphere[arrayIndex][19], 0F, 0F, 0F);
			break;
		case 7:
			sphere[arrayIndex] = new ModelRenderer[16];
			sphere[arrayIndex][0] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][0].addBox(-3F, 16F + offset, -8F, 6, 1, 1);
			sphere[arrayIndex][0].setRotationPoint(0F, 0F, 0F);
			sphere[arrayIndex][0].setTextureSize(64, 32);
			sphere[arrayIndex][0].mirror = true;
			setRotation(sphere[arrayIndex][0], 0F, 0F, 0F);
			sphere[arrayIndex][1] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][1].addBox(-5F, 16F + offset, -7F, 2, 1, 1);
			sphere[arrayIndex][1].setRotationPoint(0F, 0F, 0F);
			sphere[arrayIndex][1].setTextureSize(64, 32);
			sphere[arrayIndex][1].mirror = true;
			setRotation(sphere[arrayIndex][1], 0F, 0F, 0F);
			sphere[arrayIndex][2] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][2].addBox(-6F, 16F + offset, -6F, 1, 1, 1);
			sphere[arrayIndex][2].setRotationPoint(0F, 0F, 0F);
			sphere[arrayIndex][2].setTextureSize(64, 32);
			sphere[arrayIndex][2].mirror = true;
			setRotation(sphere[arrayIndex][2], 0F, 0F, 0F);
			sphere[arrayIndex][3] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][3].addBox(-7F, 16F + offset, -5F, 1, 1, 2);
			sphere[arrayIndex][3].setRotationPoint(0F, 0F, 0F);
			sphere[arrayIndex][3].setTextureSize(64, 32);
			sphere[arrayIndex][3].mirror = true;
			setRotation(sphere[arrayIndex][3], 0F, 0F, 0F);
			sphere[arrayIndex][4] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][4].addBox(-8F, 16F + offset, -3F, 1, 1, 6);
			sphere[arrayIndex][4].setRotationPoint(0F, 0F, 0F);
			sphere[arrayIndex][4].setTextureSize(64, 32);
			sphere[arrayIndex][4].mirror = true;
			setRotation(sphere[arrayIndex][4], 0F, 0F, 0F);
			sphere[arrayIndex][5] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][5].addBox(-7F, 16F + offset, 3F, 1, 1, 2);
			sphere[arrayIndex][5].setRotationPoint(0F, 0F, 0F);
			sphere[arrayIndex][5].setTextureSize(64, 32);
			sphere[arrayIndex][5].mirror = true;
			setRotation(sphere[arrayIndex][5], 0F, 0F, 0F);
			sphere[arrayIndex][6] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][6].addBox(-6F, 16F + offset, 5F, 1, 1, 1);
			sphere[arrayIndex][6].setRotationPoint(0F, 0F, 0F);
			sphere[arrayIndex][6].setTextureSize(64, 32);
			sphere[arrayIndex][6].mirror = true;
			setRotation(sphere[arrayIndex][6], 0F, 0F, 0F);
			sphere[arrayIndex][7] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][7].addBox(-5F, 16F + offset, 6F, 2, 1, 1);
			sphere[arrayIndex][7].setRotationPoint(0F, 0F, 0F);
			sphere[arrayIndex][7].setTextureSize(64, 32);
			sphere[arrayIndex][7].mirror = true;
			setRotation(sphere[arrayIndex][7], 0F, 0F, 0F);
			sphere[arrayIndex][8] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][8].addBox(-3F, 16F + offset, 7F, 6, 1, 1);
			sphere[arrayIndex][8].setRotationPoint(0F, 0F, 0F);
			sphere[arrayIndex][8].setTextureSize(64, 32);
			sphere[arrayIndex][8].mirror = true;
			setRotation(sphere[arrayIndex][8], 0F, 0F, 0F);
			sphere[arrayIndex][9] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][9].addBox(3F, 16F + offset, 6F, 2, 1, 1);
			sphere[arrayIndex][9].setRotationPoint(0F, 0F, 0F);
			sphere[arrayIndex][9].setTextureSize(64, 32);
			sphere[arrayIndex][9].mirror = true;
			setRotation(sphere[arrayIndex][9], 0F, 0F, 0F);
			sphere[arrayIndex][10] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][10].addBox(5F, 16F + offset, 5F, 1, 1, 1);
			sphere[arrayIndex][10].setRotationPoint(0F, 0F, 0F);
			sphere[arrayIndex][10].setTextureSize(64, 32);
			sphere[arrayIndex][10].mirror = true;
			setRotation(sphere[arrayIndex][10], 0F, 0F, 0F);
			sphere[arrayIndex][11] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][11].addBox(6F, 16F + offset, 3F, 1, 1, 2);
			sphere[arrayIndex][11].setRotationPoint(0F, 0F, 0F);
			sphere[arrayIndex][11].setTextureSize(64, 32);
			sphere[arrayIndex][11].mirror = true;
			setRotation(sphere[arrayIndex][11], 0F, 0F, 0F);
			sphere[arrayIndex][12] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][12].addBox(7F, 16F + offset, -3F, 1, 1, 6);
			sphere[arrayIndex][12].setRotationPoint(0F, 0F, 0F);
			sphere[arrayIndex][12].setTextureSize(64, 32);
			sphere[arrayIndex][12].mirror = true;
			setRotation(sphere[arrayIndex][12], 0F, 0F, 0F);
			sphere[arrayIndex][13] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][13].addBox(6F, 16F + offset, -5F, 1, 1, 2);
			sphere[arrayIndex][13].setRotationPoint(0F, 0F, 0F);
			sphere[arrayIndex][13].setTextureSize(64, 32);
			sphere[arrayIndex][13].mirror = true;
			setRotation(sphere[arrayIndex][13], 0F, 0F, 0F);
			sphere[arrayIndex][14] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][14].addBox(5F, 16F + offset, -6F, 1, 1, 1);
			sphere[arrayIndex][14].setRotationPoint(0F, 0F, 0F);
			sphere[arrayIndex][14].setTextureSize(64, 32);
			sphere[arrayIndex][14].mirror = true;
			setRotation(sphere[arrayIndex][14], 0F, 0F, 0F);
			sphere[arrayIndex][15] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][15].addBox(3F, 16F + offset, -7F, 2, 1, 1);
			sphere[arrayIndex][15].setRotationPoint(0F, 0F, 0F);
			sphere[arrayIndex][15].setTextureSize(64, 32);
			sphere[arrayIndex][15].mirror = true;
			setRotation(sphere[arrayIndex][15], 0F, 0F, 0F);
			sphere[arrayIndex][0] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][0].addBox(-3F, 15F + offset, -8F, 6, 1, 1);
			sphere[arrayIndex][0].setRotationPoint(0F, 0F, 0F);
			sphere[arrayIndex][0].setTextureSize(64, 32);
			sphere[arrayIndex][0].mirror = true;
			setRotation(sphere[arrayIndex][0], 0F, 0F, 0F);
			sphere[arrayIndex][1] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][1].addBox(-5F, 15F + offset, -7F, 2, 1, 1);
			sphere[arrayIndex][1].setRotationPoint(0F, 0F, 0F);
			sphere[arrayIndex][1].setTextureSize(64, 32);
			sphere[arrayIndex][1].mirror = true;
			setRotation(sphere[arrayIndex][1], 0F, 0F, 0F);
			sphere[arrayIndex][2] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][2].addBox(-6F, 15F + offset, -6F, 1, 1, 1);
			sphere[arrayIndex][2].setRotationPoint(0F, 0F, 0F);
			sphere[arrayIndex][2].setTextureSize(64, 32);
			sphere[arrayIndex][2].mirror = true;
			setRotation(sphere[arrayIndex][2], 0F, 0F, 0F);
			sphere[arrayIndex][3] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][3].addBox(-7F, 15F + offset, -5F, 1, 1, 2);
			sphere[arrayIndex][3].setRotationPoint(0F, 0F, 0F);
			sphere[arrayIndex][3].setTextureSize(64, 32);
			sphere[arrayIndex][3].mirror = true;
			setRotation(sphere[arrayIndex][3], 0F, 0F, 0F);
			sphere[arrayIndex][4] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][4].addBox(-8F, 15F + offset, -3F, 1, 1, 6);
			sphere[arrayIndex][4].setRotationPoint(0F, 0F, 0F);
			sphere[arrayIndex][4].setTextureSize(64, 32);
			sphere[arrayIndex][4].mirror = true;
			setRotation(sphere[arrayIndex][4], 0F, 0F, 0F);
			sphere[arrayIndex][5] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][5].addBox(-7F, 15F + offset, 3F, 1, 1, 2);
			sphere[arrayIndex][5].setRotationPoint(0F, 0F, 0F);
			sphere[arrayIndex][5].setTextureSize(64, 32);
			sphere[arrayIndex][5].mirror = true;
			setRotation(sphere[arrayIndex][5], 0F, 0F, 0F);
			sphere[arrayIndex][6] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][6].addBox(-6F, 15F + offset, 5F, 1, 1, 1);
			sphere[arrayIndex][6].setRotationPoint(0F, 0F, 0F);
			sphere[arrayIndex][6].setTextureSize(64, 32);
			sphere[arrayIndex][6].mirror = true;
			setRotation(sphere[arrayIndex][6], 0F, 0F, 0F);
			sphere[arrayIndex][7] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][7].addBox(-5F, 15F + offset, 6F, 2, 1, 1);
			sphere[arrayIndex][7].setRotationPoint(0F, 0F, 0F);
			sphere[arrayIndex][7].setTextureSize(64, 32);
			sphere[arrayIndex][7].mirror = true;
			setRotation(sphere[arrayIndex][7], 0F, 0F, 0F);
			sphere[arrayIndex][8] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][8].addBox(-3F, 15F + offset, 7F, 6, 1, 1);
			sphere[arrayIndex][8].setRotationPoint(0F, 0F, 0F);
			sphere[arrayIndex][8].setTextureSize(64, 32);
			sphere[arrayIndex][8].mirror = true;
			setRotation(sphere[arrayIndex][8], 0F, 0F, 0F);
			sphere[arrayIndex][9] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][9].addBox(3F, 15F + offset, 6F, 2, 1, 1);
			sphere[arrayIndex][9].setRotationPoint(0F, 0F, 0F);
			sphere[arrayIndex][9].setTextureSize(64, 32);
			sphere[arrayIndex][9].mirror = true;
			setRotation(sphere[arrayIndex][9], 0F, 0F, 0F);
			sphere[arrayIndex][10] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][10].addBox(5F, 15F + offset, 5F, 1, 1, 1);
			sphere[arrayIndex][10].setRotationPoint(0F, 0F, 0F);
			sphere[arrayIndex][10].setTextureSize(64, 32);
			sphere[arrayIndex][10].mirror = true;
			setRotation(sphere[arrayIndex][10], 0F, 0F, 0F);
			sphere[arrayIndex][11] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][11].addBox(6F, 15F + offset, 3F, 1, 1, 2);
			sphere[arrayIndex][11].setRotationPoint(0F, 0F, 0F);
			sphere[arrayIndex][11].setTextureSize(64, 32);
			sphere[arrayIndex][11].mirror = true;
			setRotation(sphere[arrayIndex][11], 0F, 0F, 0F);
			sphere[arrayIndex][12] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][12].addBox(7F, 15F + offset, -3F, 1, 1, 6);
			sphere[arrayIndex][12].setRotationPoint(0F, 0F, 0F);
			sphere[arrayIndex][12].setTextureSize(64, 32);
			sphere[arrayIndex][12].mirror = true;
			setRotation(sphere[arrayIndex][12], 0F, 0F, 0F);
			sphere[arrayIndex][13] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][13].addBox(6F, 15F + offset, -5F, 1, 1, 2);
			sphere[arrayIndex][13].setRotationPoint(0F, 0F, 0F);
			sphere[arrayIndex][13].setTextureSize(64, 32);
			sphere[arrayIndex][13].mirror = true;
			setRotation(sphere[arrayIndex][13], 0F, 0F, 0F);
			sphere[arrayIndex][14] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][14].addBox(5F, 15F + offset, -6F, 1, 1, 1);
			sphere[arrayIndex][14].setRotationPoint(0F, 0F, 0F);
			sphere[arrayIndex][14].setTextureSize(64, 32);
			sphere[arrayIndex][14].mirror = true;
			setRotation(sphere[arrayIndex][14], 0F, 0F, 0F);
			sphere[arrayIndex][15] = new ModelRenderer(this, 0, 0);
			sphere[arrayIndex][15].addBox(3F, 15F + offset, -7F, 2, 1, 1);
			sphere[arrayIndex][15].setRotationPoint(0F, 0F, 0F);
			sphere[arrayIndex][15].setTextureSize(64, 32);
			sphere[arrayIndex][15].mirror = true;
			setRotation(sphere[arrayIndex][15], 0F, 0F, 0F);
			break;
		default:
			break;
		}
	}

	private void addBloodRing(int index, int arrayIndex, int offset) {
		switch (index) {
		case 1:
			liquid[arrayIndex] = new ModelRenderer[5];
			liquid[arrayIndex][0] = new ModelRenderer(this, bloodOffsetX,
					bloodOffsetY);
			liquid[arrayIndex][0].addBox(-3F, 22F + offset, -1F, 6, 1, 2);
			liquid[arrayIndex][0].setRotationPoint(0F, 0F, 0F);
			liquid[arrayIndex][0].setTextureSize(64, 128);
			liquid[arrayIndex][0].mirror = true;
			setRotation(liquid[arrayIndex][0], 0F, 0F, 0F);
			liquid[arrayIndex][1] = new ModelRenderer(this, bloodOffsetX,
					bloodOffsetY);
			liquid[arrayIndex][1].addBox(-2F, 22F + offset, -2F, 4, 1, 1);
			liquid[arrayIndex][1].setRotationPoint(0F, 0F, 0F);
			liquid[arrayIndex][1].setTextureSize(64, 128);
			liquid[arrayIndex][1].mirror = true;
			setRotation(liquid[arrayIndex][1], 0F, 0F, 0F);
			liquid[arrayIndex][2] = new ModelRenderer(this, bloodOffsetX,
					bloodOffsetY);
			liquid[arrayIndex][2].addBox(-2F, 22F + offset, 1F, 4, 1, 1);
			liquid[arrayIndex][2].setRotationPoint(0F, 0F, 0F);
			liquid[arrayIndex][2].setTextureSize(64, 128);
			liquid[arrayIndex][2].mirror = true;
			setRotation(liquid[arrayIndex][2], 0F, 0F, 0F);
			liquid[arrayIndex][3] = new ModelRenderer(this, bloodOffsetX,
					bloodOffsetY);
			liquid[arrayIndex][3].addBox(-1F, 22F + offset, 2F, 2, 1, 1);
			liquid[arrayIndex][3].setRotationPoint(0F, 0F, 0F);
			liquid[arrayIndex][3].setTextureSize(64, 128);
			liquid[arrayIndex][3].mirror = true;
			setRotation(liquid[arrayIndex][3], 0F, 0F, 0F);
			liquid[arrayIndex][4] = new ModelRenderer(this, bloodOffsetX,
					bloodOffsetY);
			liquid[arrayIndex][4].addBox(-1F, 22F + offset, -3F, 2, 1, 1);
			liquid[arrayIndex][4].setRotationPoint(0F, 0F, 0F);
			liquid[arrayIndex][4].setTextureSize(64, 128);
			liquid[arrayIndex][4].mirror = true;
			setRotation(liquid[arrayIndex][4], 0F, 0F, 0F);
			break;
		case 2:
			liquid[arrayIndex] = new ModelRenderer[8];
			liquid[arrayIndex][0] = new ModelRenderer(this, bloodOffsetX,
					bloodOffsetY);
			liquid[arrayIndex][0].addBox(-5F, 21F + offset, -1F, 10, 1, 2);
			liquid[arrayIndex][0].setRotationPoint(0F, 0F, 0F);
			liquid[arrayIndex][0].setTextureSize(64, 128);
			liquid[arrayIndex][0].mirror = true;
			setRotation(liquid[arrayIndex][0], 0F, 0F, 0F);
			liquid[arrayIndex][1] = new ModelRenderer(this, bloodOffsetX,
					bloodOffsetY);
			liquid[arrayIndex][1].addBox(-4F, 21F + offset, 1F, 8, 1, 2);
			liquid[arrayIndex][1].setRotationPoint(0F, 0F, 0F);
			liquid[arrayIndex][1].setTextureSize(64, 128);
			liquid[arrayIndex][1].mirror = true;
			setRotation(liquid[arrayIndex][1], 0F, 0F, 0F);
			liquid[arrayIndex][2] = new ModelRenderer(this, bloodOffsetX,
					bloodOffsetY);
			liquid[arrayIndex][2].addBox(-4F, 21F + offset, -3F, 8, 1, 2);
			liquid[arrayIndex][2].setRotationPoint(0F, 0F, 0F);
			liquid[arrayIndex][2].setTextureSize(64, 128);
			liquid[arrayIndex][2].mirror = true;
			setRotation(liquid[arrayIndex][2], 0F, 0F, 0F);
			liquid[arrayIndex][3] = new ModelRenderer(this, bloodOffsetX,
					bloodOffsetY);
			liquid[arrayIndex][3].addBox(-3F, 21F + offset, -4F, 6, 1, 1);
			liquid[arrayIndex][3].setRotationPoint(0F, 0F, 0F);
			liquid[arrayIndex][3].setTextureSize(64, 128);
			liquid[arrayIndex][3].mirror = true;
			setRotation(liquid[arrayIndex][3], 0F, 0F, 0F);
			liquid[arrayIndex][4] = new ModelRenderer(this, bloodOffsetX,
					bloodOffsetY);
			liquid[arrayIndex][4].addBox(-3F, 21F + offset, 3F, 6, 1, 1);
			liquid[arrayIndex][4].setRotationPoint(0F, 0F, 0F);
			liquid[arrayIndex][4].setTextureSize(64, 128);
			liquid[arrayIndex][4].mirror = true;
			setRotation(liquid[arrayIndex][4], 0F, 0F, 0F);
			liquid[arrayIndex][5] = new ModelRenderer(this, bloodOffsetX,
					bloodOffsetY);
			liquid[arrayIndex][5].addBox(-1F, 21F + offset, 4F, 2, 1, 1);
			liquid[arrayIndex][5].setRotationPoint(0F, 0F, 0F);
			liquid[arrayIndex][5].setTextureSize(64, 128);
			liquid[arrayIndex][5].mirror = true;
			setRotation(liquid[arrayIndex][5], 0F, 0F, 0F);
			liquid[arrayIndex][6] = new ModelRenderer(this, bloodOffsetX,
					bloodOffsetY);
			liquid[arrayIndex][6].addBox(-1F, 21F + offset, -5F, 2, 1, 1);
			liquid[arrayIndex][6].setRotationPoint(0F, 0F, 0F);
			liquid[arrayIndex][6].setTextureSize(64, 128);
			liquid[arrayIndex][6].mirror = true;
			setRotation(liquid[arrayIndex][6], 0F, 0F, 0F);
			break;
		case 3:
			liquid[arrayIndex] = new ModelRenderer[8];
			liquid[arrayIndex][0] = new ModelRenderer(this, bloodOffsetX,
					bloodOffsetY);
			liquid[arrayIndex][0].addBox(-6F, 20F + offset, -1F, 12, 1, 2);
			liquid[arrayIndex][0].setRotationPoint(0F, 0F, 0F);
			liquid[arrayIndex][0].setTextureSize(64, 128);
			liquid[arrayIndex][0].mirror = true;
			setRotation(liquid[arrayIndex][0], 0F, 0F, 0F);
			liquid[arrayIndex][1] = new ModelRenderer(this, bloodOffsetX,
					bloodOffsetY);
			liquid[arrayIndex][1].addBox(-5F, 20F + offset, 1F, 10, 1, 3);
			liquid[arrayIndex][1].setRotationPoint(0F, 0F, 0F);
			liquid[arrayIndex][1].setTextureSize(64, 128);
			liquid[arrayIndex][1].mirror = true;
			setRotation(liquid[arrayIndex][1], 0F, 0F, 0F);
			liquid[arrayIndex][2] = new ModelRenderer(this, bloodOffsetX,
					bloodOffsetY);
			liquid[arrayIndex][2].addBox(-5F, 20F + offset, -4F, 10, 1, 3);
			liquid[arrayIndex][2].setRotationPoint(0F, 0F, 0F);
			liquid[arrayIndex][2].setTextureSize(64, 128);
			liquid[arrayIndex][2].mirror = true;
			setRotation(liquid[arrayIndex][2], 0F, 0F, 0F);
			liquid[arrayIndex][3] = new ModelRenderer(this, bloodOffsetX,
					bloodOffsetY);
			liquid[arrayIndex][3].addBox(-4F, 20F + offset, -5F, 8, 1, 1);
			liquid[arrayIndex][3].setRotationPoint(0F, 0F, 0F);
			liquid[arrayIndex][3].setTextureSize(64, 128);
			liquid[arrayIndex][3].mirror = true;
			setRotation(liquid[arrayIndex][3], 0F, 0F, 0F);
			liquid[arrayIndex][4] = new ModelRenderer(this, bloodOffsetX,
					bloodOffsetY);
			liquid[arrayIndex][4].addBox(-4F, 20F + offset, 4F, 8, 1, 1);
			liquid[arrayIndex][4].setRotationPoint(0F, 0F, 0F);
			liquid[arrayIndex][4].setTextureSize(64, 128);
			liquid[arrayIndex][4].mirror = true;
			setRotation(liquid[arrayIndex][4], 0F, 0F, 0F);
			liquid[arrayIndex][5] = new ModelRenderer(this, bloodOffsetX,
					bloodOffsetY);
			liquid[arrayIndex][5].addBox(-1F, 20F + offset, 5F, 2, 1, 1);
			liquid[arrayIndex][5].setRotationPoint(0F, 0F, 0F);
			liquid[arrayIndex][5].setTextureSize(64, 128);
			liquid[arrayIndex][5].mirror = true;
			setRotation(liquid[arrayIndex][5], 0F, 0F, 0F);
			liquid[arrayIndex][6] = new ModelRenderer(this, bloodOffsetX,
					bloodOffsetY);
			liquid[arrayIndex][6].addBox(-1F, 20F + offset, -6F, 2, 1, 1);
			liquid[arrayIndex][6].setRotationPoint(0F, 0F, 0F);
			liquid[arrayIndex][6].setTextureSize(64, 128);
			liquid[arrayIndex][6].mirror = true;
			setRotation(liquid[arrayIndex][6], 0F, 0F, 0F);
			break;
		case 4:
			liquid[arrayIndex] = new ModelRenderer[6];
			liquid[arrayIndex][0] = new ModelRenderer(this, bloodOffsetX,
					bloodOffsetY);
			liquid[arrayIndex][0].addBox(-6F, 19F + offset, -3F, 12, 1, 6);
			liquid[arrayIndex][0].setRotationPoint(0F, 0F, 0F);
			liquid[arrayIndex][0].setTextureSize(64, 128);
			liquid[arrayIndex][0].mirror = true;
			setRotation(liquid[arrayIndex][0], 0F, 0F, 0F);
			liquid[arrayIndex][1] = new ModelRenderer(this, bloodOffsetX,
					bloodOffsetY);
			liquid[arrayIndex][1].addBox(-5F, 19F + offset, -5F, 10, 1, 2);
			liquid[arrayIndex][1].setRotationPoint(0F, 0F, 0F);
			liquid[arrayIndex][1].setTextureSize(64, 128);
			liquid[arrayIndex][1].mirror = true;
			setRotation(liquid[arrayIndex][1], 0F, 0F, 0F);
			liquid[arrayIndex][2] = new ModelRenderer(this, bloodOffsetX,
					bloodOffsetY);
			liquid[arrayIndex][2].addBox(-5F, 19F + offset, 3F, 10, 1, 2);
			liquid[arrayIndex][2].setRotationPoint(0F, 0F, 0F);
			liquid[arrayIndex][2].setTextureSize(64, 128);
			liquid[arrayIndex][2].mirror = true;
			setRotation(liquid[arrayIndex][2], 0F, 0F, 0F);
			liquid[arrayIndex][3] = new ModelRenderer(this, bloodOffsetX,
					bloodOffsetY);
			liquid[arrayIndex][3].addBox(-3F, 19F + offset, 5F, 6, 1, 1);
			liquid[arrayIndex][3].setRotationPoint(0F, 0F, 0F);
			liquid[arrayIndex][3].setTextureSize(64, 128);
			liquid[arrayIndex][3].mirror = true;
			setRotation(liquid[arrayIndex][3], 0F, 0F, 0F);
			liquid[arrayIndex][4] = new ModelRenderer(this, bloodOffsetX,
					bloodOffsetY);
			liquid[arrayIndex][4].addBox(-3F, 19F + offset, -6F, 6, 1, 1);
			liquid[arrayIndex][4].setRotationPoint(0F, 0F, 0F);
			liquid[arrayIndex][4].setTextureSize(64, 128);
			liquid[arrayIndex][4].mirror = true;
			setRotation(liquid[arrayIndex][4], 0F, 0F, 0F);
			break;
		case 5:
			liquid[arrayIndex] = new ModelRenderer[10];
			liquid[arrayIndex][0] = new ModelRenderer(this, bloodOffsetX,
					bloodOffsetY);
			liquid[arrayIndex][0].addBox(-5F, 18F + offset, -5F, 10, 1, 10);
			liquid[arrayIndex][0].setRotationPoint(0F, 0F, 0F);
			liquid[arrayIndex][0].setTextureSize(64, 128);
			liquid[arrayIndex][0].mirror = true;
			setRotation(liquid[arrayIndex][0], 0F, 0F, 0F);
			liquid[arrayIndex][1] = new ModelRenderer(this, bloodOffsetX,
					bloodOffsetY);
			liquid[arrayIndex][1].addBox(-7F, 18F + offset, -1F, 1, 1, 2);
			liquid[arrayIndex][1].setRotationPoint(0F, 0F, 0F);
			liquid[arrayIndex][1].setTextureSize(64, 128);
			liquid[arrayIndex][1].mirror = true;
			setRotation(liquid[arrayIndex][1], 0F, 0F, 0F);
			liquid[arrayIndex][2] = new ModelRenderer(this, bloodOffsetX,
					bloodOffsetY);
			liquid[arrayIndex][2].addBox(6F, 18F + offset, -1F, 1, 1, 2);
			liquid[arrayIndex][2].setRotationPoint(0F, 0F, 0F);
			liquid[arrayIndex][2].setTextureSize(64, 128);
			liquid[arrayIndex][2].mirror = true;
			setRotation(liquid[arrayIndex][2], 0F, 0F, 0F);
			liquid[arrayIndex][3] = new ModelRenderer(this, bloodOffsetX,
					bloodOffsetY);
			liquid[arrayIndex][3].addBox(-1F, 18F + offset, -7F, 2, 1, 1);
			liquid[arrayIndex][3].setRotationPoint(0F, 0F, 0F);
			liquid[arrayIndex][3].setTextureSize(64, 128);
			liquid[arrayIndex][3].mirror = true;
			setRotation(liquid[arrayIndex][3], 0F, 0F, 0F);
			liquid[arrayIndex][4] = new ModelRenderer(this, bloodOffsetX,
					bloodOffsetY);
			liquid[arrayIndex][4].addBox(-1F, 18F + offset, 6F, 2, 1, 1);
			liquid[arrayIndex][4].setRotationPoint(0F, 0F, 0F);
			liquid[arrayIndex][4].setTextureSize(64, 128);
			liquid[arrayIndex][4].mirror = true;
			setRotation(liquid[arrayIndex][4], 0F, 0F, 0F);
			liquid[arrayIndex][5] = new ModelRenderer(this, bloodOffsetX,
					bloodOffsetY);
			liquid[arrayIndex][5].addBox(-4F, 18F + offset, 5F, 8, 1, 1);
			liquid[arrayIndex][5].setRotationPoint(0F, 0F, 0F);
			liquid[arrayIndex][5].setTextureSize(64, 128);
			liquid[arrayIndex][5].mirror = true;
			setRotation(liquid[arrayIndex][5], 0F, 0F, 0F);
			liquid[arrayIndex][6] = new ModelRenderer(this, bloodOffsetX,
					bloodOffsetY);
			liquid[arrayIndex][6].addBox(-4F, 18F + offset, -6F, 8, 1, 1);
			liquid[arrayIndex][6].setRotationPoint(0F, 0F, 0F);
			liquid[arrayIndex][6].setTextureSize(64, 128);
			liquid[arrayIndex][6].mirror = true;
			setRotation(liquid[arrayIndex][6], 0F, 0F, 0F);
			liquid[arrayIndex][7] = new ModelRenderer(this, bloodOffsetX,
					bloodOffsetY);
			liquid[arrayIndex][7].addBox(-6F, 18F + offset, -4F, 1, 1, 8);
			liquid[arrayIndex][7].setRotationPoint(0F, 0F, 0F);
			liquid[arrayIndex][7].setTextureSize(64, 128);
			liquid[arrayIndex][7].mirror = true;
			setRotation(liquid[arrayIndex][7], 0F, 0F, 0F);
			liquid[arrayIndex][8] = new ModelRenderer(this, bloodOffsetX,
					bloodOffsetY);
			liquid[arrayIndex][8].addBox(5F, 18F + offset, -4F, 1, 1, 8);
			liquid[arrayIndex][8].setRotationPoint(0F, 0F, 0F);
			liquid[arrayIndex][8].setTextureSize(64, 128);
			liquid[arrayIndex][8].mirror = true;
			setRotation(liquid[arrayIndex][8], 0F, 0F, 0F);
			break;
		case 6:
			liquid[arrayIndex] = new ModelRenderer[10];
			liquid[arrayIndex][0] = new ModelRenderer(this, bloodOffsetX,
					bloodOffsetY);
			liquid[arrayIndex][0].addBox(-5F, 17F + offset, -5F, 10, 1, 10);
			liquid[arrayIndex][0].setRotationPoint(0F, 0F, 0F);
			liquid[arrayIndex][0].setTextureSize(64, 128);
			liquid[arrayIndex][0].mirror = true;
			setRotation(liquid[arrayIndex][0], 0F, 0F, 0F);
			liquid[arrayIndex][1] = new ModelRenderer(this, bloodOffsetX,
					bloodOffsetY);
			liquid[arrayIndex][1].addBox(-7F, 17F + offset, -2F, 1, 1, 4);
			liquid[arrayIndex][1].setRotationPoint(0F, 0F, 0F);
			liquid[arrayIndex][1].setTextureSize(64, 128);
			liquid[arrayIndex][1].mirror = true;
			setRotation(liquid[arrayIndex][1], 0F, 0F, 0F);
			liquid[arrayIndex][2] = new ModelRenderer(this, bloodOffsetX,
					bloodOffsetY);
			liquid[arrayIndex][2].addBox(6F, 17F + offset, -2F, 1, 1, 4);
			liquid[arrayIndex][2].setRotationPoint(0F, 0F, 0F);
			liquid[arrayIndex][2].setTextureSize(64, 128);
			liquid[arrayIndex][2].mirror = true;
			setRotation(liquid[arrayIndex][2], 0F, 0F, 0F);
			liquid[arrayIndex][3] = new ModelRenderer(this, bloodOffsetX,
					bloodOffsetY);
			liquid[arrayIndex][3].addBox(-2F, 17F + offset, -7F, 4, 1, 1);
			liquid[arrayIndex][3].setRotationPoint(0F, 0F, 0F);
			liquid[arrayIndex][3].setTextureSize(64, 128);
			liquid[arrayIndex][3].mirror = true;
			setRotation(liquid[arrayIndex][3], 0F, 0F, 0F);
			liquid[arrayIndex][4] = new ModelRenderer(this, bloodOffsetX,
					bloodOffsetY);
			liquid[arrayIndex][4].addBox(-2F, 17F + offset, 6F, 4, 1, 1);
			liquid[arrayIndex][4].setRotationPoint(0F, 0F, 0F);
			liquid[arrayIndex][4].setTextureSize(64, 128);
			liquid[arrayIndex][4].mirror = true;
			setRotation(liquid[arrayIndex][4], 0F, 0F, 0F);
			liquid[arrayIndex][5] = new ModelRenderer(this, bloodOffsetX,
					bloodOffsetY);
			liquid[arrayIndex][5].addBox(-4F, 17F + offset, 5F, 8, 1, 1);
			liquid[arrayIndex][5].setRotationPoint(0F, 0F, 0F);
			liquid[arrayIndex][5].setTextureSize(64, 128);
			liquid[arrayIndex][5].mirror = true;
			setRotation(liquid[arrayIndex][5], 0F, 0F, 0F);
			liquid[arrayIndex][6] = new ModelRenderer(this, bloodOffsetX,
					bloodOffsetY);
			liquid[arrayIndex][6].addBox(-4F, 17F + offset, -6F, 8, 1, 1);
			liquid[arrayIndex][6].setRotationPoint(0F, 0F, 0F);
			liquid[arrayIndex][6].setTextureSize(64, 128);
			liquid[arrayIndex][6].mirror = true;
			setRotation(liquid[arrayIndex][6], 0F, 0F, 0F);
			liquid[arrayIndex][7] = new ModelRenderer(this, bloodOffsetX,
					bloodOffsetY);
			liquid[arrayIndex][7].addBox(-6F, 17F + offset, -4F, 1, 1, 8);
			liquid[arrayIndex][7].setRotationPoint(0F, 0F, 0F);
			liquid[arrayIndex][7].setTextureSize(64, 128);
			liquid[arrayIndex][7].mirror = true;
			setRotation(liquid[arrayIndex][7], 0F, 0F, 0F);
			liquid[arrayIndex][8] = new ModelRenderer(this, bloodOffsetX,
					bloodOffsetY);
			liquid[arrayIndex][8].addBox(5F, 17F + offset, -4F, 1, 1, 8);
			liquid[arrayIndex][8].setRotationPoint(0F, 0F, 0F);
			liquid[arrayIndex][8].setTextureSize(64, 128);
			liquid[arrayIndex][8].mirror = true;
			setRotation(liquid[arrayIndex][8], 0F, 0F, 0F);
			break;
		case 7:
			liquid[arrayIndex] = new ModelRenderer[10];
			liquid[arrayIndex][0] = new ModelRenderer(this, bloodOffsetX,
					bloodOffsetY);
			liquid[arrayIndex][0].addBox(-5F, 16F + offset, -5F, 10, 1, 10);
			liquid[arrayIndex][0].setRotationPoint(0F, 0F, 0F);
			liquid[arrayIndex][0].setTextureSize(64, 128);
			liquid[arrayIndex][0].mirror = true;
			setRotation(liquid[arrayIndex][0], 0F, 0F, 0F);
			liquid[arrayIndex][1] = new ModelRenderer(this, bloodOffsetX,
					bloodOffsetY);
			liquid[arrayIndex][1].addBox(-7F, 16F + offset, -3F, 1, 1, 6);
			liquid[arrayIndex][1].setRotationPoint(0F, 0F, 0F);
			liquid[arrayIndex][1].setTextureSize(64, 128);
			liquid[arrayIndex][1].mirror = true;
			setRotation(liquid[arrayIndex][1], 0F, 0F, 0F);
			liquid[arrayIndex][2] = new ModelRenderer(this, bloodOffsetX,
					bloodOffsetY);
			liquid[arrayIndex][2].addBox(6F, 16F + offset, -3F, 1, 1, 6);
			liquid[arrayIndex][2].setRotationPoint(0F, 0F, 0F);
			liquid[arrayIndex][2].setTextureSize(64, 128);
			liquid[arrayIndex][2].mirror = true;
			setRotation(liquid[arrayIndex][2], 0F, 0F, 0F);
			liquid[arrayIndex][3] = new ModelRenderer(this, bloodOffsetX,
					bloodOffsetY);
			liquid[arrayIndex][3].addBox(-3F, 16F + offset, -7F, 6, 1, 1);
			liquid[arrayIndex][3].setRotationPoint(0F, 0F, 0F);
			liquid[arrayIndex][3].setTextureSize(64, 128);
			liquid[arrayIndex][3].mirror = true;
			setRotation(liquid[arrayIndex][3], 0F, 0F, 0F);
			liquid[arrayIndex][4] = new ModelRenderer(this, bloodOffsetX,
					bloodOffsetY);
			liquid[arrayIndex][4].addBox(-3F, 16F + offset, 6F, 6, 1, 1);
			liquid[arrayIndex][4].setRotationPoint(0F, 0F, 0F);
			liquid[arrayIndex][4].setTextureSize(64, 128);
			liquid[arrayIndex][4].mirror = true;
			setRotation(liquid[arrayIndex][4], 0F, 0F, 0F);
			liquid[arrayIndex][5] = new ModelRenderer(this, bloodOffsetX,
					bloodOffsetY);
			liquid[arrayIndex][5].addBox(-5F, 16F + offset, 5F, 10, 1, 1);
			liquid[arrayIndex][5].setRotationPoint(0F, 0F, 0F);
			liquid[arrayIndex][5].setTextureSize(64, 128);
			liquid[arrayIndex][5].mirror = true;
			setRotation(liquid[arrayIndex][5], 0F, 0F, 0F);
			liquid[arrayIndex][6] = new ModelRenderer(this, bloodOffsetX,
					bloodOffsetY);
			liquid[arrayIndex][6].addBox(-5F, 16F + offset, -6F, 10, 1, 1);
			liquid[arrayIndex][6].setRotationPoint(0F, 0F, 0F);
			liquid[arrayIndex][6].setTextureSize(64, 128);
			liquid[arrayIndex][6].mirror = true;
			setRotation(liquid[arrayIndex][6], 0F, 0F, 0F);
			liquid[arrayIndex][7] = new ModelRenderer(this, bloodOffsetX,
					bloodOffsetY);
			liquid[arrayIndex][7].addBox(-6F, 16F + offset, -5F, 1, 1, 10);
			liquid[arrayIndex][7].setRotationPoint(0F, 0F, 0F);
			liquid[arrayIndex][7].setTextureSize(64, 128);
			liquid[arrayIndex][7].mirror = true;
			setRotation(liquid[arrayIndex][7], 0F, 0F, 0F);
			liquid[arrayIndex][8] = new ModelRenderer(this, bloodOffsetX,
					bloodOffsetY);
			liquid[arrayIndex][8].addBox(5F, 16F + offset, -5F, 1, 1, 10);
			liquid[arrayIndex][8].setRotationPoint(0F, 0F, 0F);
			liquid[arrayIndex][8].setTextureSize(64, 128);
			liquid[arrayIndex][8].mirror = true;
			setRotation(liquid[arrayIndex][8], 0F, 0F, 0F);
			break;
		}
	}

	private void setRotation(ModelRenderer model, float x, float y, float z) {
		model.rotateAngleX = x;
		model.rotateAngleY = y;
		model.rotateAngleZ = z;
	}

	public void setRotationAngles(float f, float f1, float f2, float f3,
			float f4, float f5, Entity entity) {
		super.setRotationAngles(f, f1, f2, f3, f4, f5, entity);
	}

	public void setBloodLevel(int level) {
		bloodLevel = level;
		//Logger.i(TAG, "SetBloodLevel called, level: " + level);
	}

}
